package com.askill.eshift.ui.main;

import java.util.Set;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.arjuna.ats.internal.arjuna.utils.ManualProcessId;
import com.askill.eshift.user.User;
import com.askill.eshift.user.UserRole;
import com.askill.eshift.user.UserRoleEnum;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.MenuBar;

public class MainPage extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;

	@AutoGenerated
	private Label label_1;

	@AutoGenerated
	private MenuBar mainMenu;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final Logger LOG = LoggerFactory.getLogger(MainPage.class);
	
	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainPage() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}
	
	public void setModel(MainPageModel model){
		User user = model.getUser();
		if ( user == null ){
			LOG.error("No user set.");
			return;
		}
		
		if ( user.isAdmin() ){
			buildAdminMenu();
		} else {
			mainMenu.addItem("Not Admin", null);
		}
	}
	
	private void buildAdminMenu(){
		MenuBar.MenuItem admin = mainMenu.addItem("Admin", null);
		admin.addItem("User Admin", null);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// mainMenu
		mainMenu = new MenuBar();
		mainMenu.setImmediate(false);
		mainMenu.setWidth("100.0%");
		mainMenu.setHeight("-1px");
		mainLayout.addComponent(mainMenu, "top:0.0px;left:0.0px;");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("210px");
		label_1.setHeight("-1px");
		label_1.setValue("Hellow world");
		mainLayout.addComponent(label_1, "top:182.0px;left:190.0px;");
		
		return mainLayout;
	}

}
